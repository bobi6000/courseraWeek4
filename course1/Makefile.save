#******************************************************************************
# Copyright (C) 2017 by Alex Fosdick - University of Colorado
#
# Redistribution, modification or use of this software in source or binary
# forms is permitted as long as the files maintain this copyright. Users are 
# permitted to modify this and use it to learn about the field of embedded
# software. Alex Fosdick and the University of Colorado are not liable for any
# misuse of this material. 
#
#*****************************************************************************

#------------------------------------------------------------------------------
# Makefile to Homework Modul 4.
# Author Pawel Staniak
# 
#
# Build Targets:
#	COMPILE_ALL - compile all objects without linking
#	BUILD - builds all  and links all sources files
#	CLEAN - clean project. Removes generated siles
#
# Platform Overrides:
#       HOST - target platform for testing native compiler
#	MSP432 - target platform for testing cross compiler
#------------------------------------------------------------------------------
include sources.mk

# Platform Overrides
 
BASENAME = c1m4
TARGET = $(BASENAME).out

# Architectures Specific Flags
LINKER_FILE = ./msp432p401r.lds

PATH_SRC = ./src
PATH_HOME= ./

# Compiler Flags and Defines
CPPFLAGs= -DCOURSE1

	ifeq ($(PLATFORM),HOST)
		CC = gcc
		LD = ld
		LDFLAGS = -Wl,-Map=$(BASENAME).map
		CPPFLAGs += -DHOST
		CPPFLAGs += -DVERBOSE
		CFLAGS = -Wall -Werror -g -O0 -std=c99
		SIZE = size
		OBJDUMP = objdump	
		
	else ifeq ($(PLATFORM),MSP432)

		CPU = cortex-m4
		ARCH = thumb
		ARCH2 = armv7e-m
		FLOAT = hard
		FPU = fpv4-sp-d16
		SPECS = nosys.specs 
		CC = arm-none-eabi-gcc
		LD = arm-none-eabi-ld
		SIZE = arm-none-eabi-size
		OBJDUMP = arm-none-eabi-objdump
		LDFLAGS = -Wl,-Map=$(BASENAME).map -T $(LINKER_FILE) 
		CPPFLAGs = 	-MD \
				-DMSP432
		CFLAGS = -mcpu=$(CPU) -m$(ARCH) --specs=$(SPECS)\
			 -march=$(ARCH2) -mfloat-abi=$(FLOAT)\
			 -mfpu=$(FPU) -Wall -Werror\
				-g\
				-O0\
				-std=c99
	endif				
		

 

OBJS = $(SOURCES:.c=.o)

%.i : %.c
	$(CC)  $(CPPFLAGs)  $(INCLUDES) -E  -o $@ $<
%.asm : %.c
	$(CC)  $(CPPFLAGs)  $(INCLUDES) -S  -o $@ $<
%.o : %.c
	$(CC)  -MD $(CPPFLAGs) -c $<  $(INCLUDES) $(CFLAGS) $(BASENAME).asm : $(TARGET)
	$(OBJDUMP) -S $(TARGET) > $(BASENAME).asm


.PHONY: compile-all
compile-all: $(TARGET)
	$(CC)  $(CPPFLAGs) -c $(OBJS)  $(INCLUDES) $(CFLAGS)
	$(OBJDUMP) -S $(TARGET) > $(BASENAME).asm
	$(SIZE) $(TARGET) 

.PHONY: build
build : $(TARGET)

$(TARGET) : $(OBJS)
	$(CC)  $(CPPFLAGs)  $(OBJS)  $(INCLUDES) $(CFLAGS) $(LDFLAGS) -o $@
	$(SIZE) $(TARGET)

.PHONY: clean
clean:
	rm -f $(TARGET) $(BASENAME).map *.o *.asm *.i *.d

.PHONY: info
info:
	@echo PLATFORM=$(PLATFORM)
	@echo SOURCES=$(SOURCES)
	@echo INCLUDES=$(INCLUDES)
	@echo TARGET_NAME=$(TARGET)
	@echo CPPFLAGs=$(CPPFLAGs)

